plot(st_geometry(lima_centroids_weighted),
add = TRUE, col = "red", pch = 20, cex = 2.0)
# Plot everything in a single combined plot
plot(raster_construction_difficulty,
main = "Construction Difficulty Index + W. Centroids + Roads\nBest Possible Connection",
col = viridis::viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, lwd = 1)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# Plot best possible path
plot(st_geometry(paths_sf), add = TRUE, col = "white", lwd = 2.0)
# Add weighted centroids (in red)
plot(st_geometry(lima_centroids_weighted),
add = TRUE, col = "red", pch = 20, cex = 2.0)
# Plot everything in a single combined plot
plot(raster_construction_difficulty,
main = "Construction Difficulty Index + W. Centroids + Roads + Best Possible Connection",
col = viridis::viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, lwd = 1)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# Plot best possible path
plot(st_geometry(paths_sf), add = TRUE, col = "white", lwd = 2.0)
# Add weighted centroids (in red)
plot(st_geometry(lima_centroids_weighted),
add = TRUE, col = "red", pch = 20, cex = 2.0)
# Plot everything in a single combined plot
plot(raster_construction_difficulty,
main = "W. Centroids + Roads + Best Possible Connection",
col = viridis::viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, lwd = 1)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# Plot best possible path
plot(st_geometry(paths_sf), add = TRUE, col = "white", lwd = 2.0)
# Add weighted centroids (in red)
plot(st_geometry(lima_centroids_weighted),
add = TRUE, col = "red", pch = 20, cex = 2.0)
library(osmdata)
q <- opq("Lima, Peru") %>%
add_osm_feature(key = "railway", value = c("rail", "light_rail", "subway"))
lima_trains <- osmdata_sf(q)
# Plot base map (e.g., raster or just district boundaries)
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + OSM Railway Lines",
col = NA, border = "black", lwd = 1)
# Plot railway lines
if (!is.null(lima_trains$osm_lines)) {
plot(st_geometry(lima_trains$osm_lines), add = TRUE, col = "purple", lwd = 2)
}
# Optional: Plot railway stations
if (!is.null(lima_trains$osm_points)) {
plot(st_geometry(lima_trains$osm_points), add = TRUE, col = "darkred", pch = 18, cex = 1.5)
}
# Optional: Add your weighted centroids or other layers
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
q <- opq("Lima, Peru") %>%
add_osm_feature(key = "railway", value = c("rail", "light_rail", "subway", "metro"))
lima_trains <- osmdata_sf(q)
# Plotting
# Plot base map (e.g., raster or just district boundaries)
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + OSM Railway Lines",
col = NA, border = "black", lwd = 1)
# Plot railway lines
if (!is.null(lima_trains$osm_lines)) {
plot(st_geometry(lima_trains$osm_lines), add = TRUE, col = "purple", lwd = 2)
}
# Optional: Plot railway stations
if (!is.null(lima_trains$osm_points)) {
plot(st_geometry(lima_trains$osm_points), add = TRUE, col = "darkred", pch = 18, cex = 1.5)
}
# Optional: Add your weighted centroids or other layers
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
##### Creating Difficulty of construction from slope+roughness of terrain ###
### Calculate "total Difficulty of construction level" of this metro lines##
### Compare with theoretically build metro lines ###
# Plotting
# Plot base map (e.g., raster or just district boundaries)
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + OSM Railway Lines",
col = NA, border = "black", lwd = 1)
# Plot railway lines
if (!is.null(lima_trains$osm_lines)) {
plot(st_geometry(lima_trains$osm_lines), add = TRUE, col = "purple", lwd = 2)
}
# Optional: Plot railway stations
if (!is.null(lima_trains$osm_points)) {
plot(st_geometry(lima_trains$osm_points), add = TRUE, col = "darkred", pch = 18, cex = 1.0)
}
# Optional: Add your weighted centroids or other layers
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Plotting
# Plot base map (e.g., raster or just district boundaries)
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + OSM Railway Lines",
col = NA, border = "black", lwd = 1)
# Plot railway lines
if (!is.null(lima_trains$osm_lines)) {
plot(st_geometry(lima_trains$osm_lines), add = TRUE, col = "purple", lwd = 2)
}
# Optional: Plot railway stations
if (!is.null(lima_trains$osm_points)) {
plot(st_geometry(lima_trains$osm_points), add = TRUE, col = "darkred", pch = 18, cex = 0.5)
}
# Optional: Add your weighted centroids or other layers
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
View(lima_roads)
unique(lima_roads$highway)
peru_train <- st_read(file.path(data_folder, "data", "train", "gis_osm_railways_free_1.shp"))
View(peru_train)
peru_train <- st_read(file.path(data_folder, "data", "train", "gis_osm_railways_free_1.shp"))
# Filter only codes 6102 and 6103
lima_train_filtered <- peru_train %>%
filter(code %in% c(6102, 6103))
lima_train_cropped <- st_intersection(lima_train_filtered, st_union(lima_geoms_cropped))
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102, 6103)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
peru_train <- st_read(file.path(data_folder, "data", "train", "gis_osm_railways_free_1.shp"))
# Filter only codes 6102 and 6103
lima_train_filtered <- peru_train %>%
filter(code %in% c(6101, 6102, 6103))
lima_train_cropped <- st_intersection(lima_train_filtered, st_union(lima_geoms_cropped))
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102, 6103)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
peru_train <- st_read(file.path(data_folder, "data", "train", "gis_osm_railways_free_1.shp"))
# Filter only codes 6102 and 6103
lima_train_filtered <- peru_train %>%
filter(code %in% c(6102, 6103))
lima_train_cropped <- st_intersection(lima_train_filtered, st_union(lima_geoms_cropped))
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102, 6103)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Data for Train station lines in Lima
peru_train <- st_read(file.path(data_folder, "data", "train", "gis_osm_railways_free_1.shp"))
# Filter only codes 6102 and 6103
lima_train_filtered <- peru_train %>%
filter(code %in% c(6102))
lima_train_cropped <- st_intersection(lima_train_filtered, st_union(lima_geoms_cropped))
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
peru_train <- st_read(file.path(data_folder, "data", "train", "gis_osm_railways_free_1.shp"))
# Filter only codes 6102 and 6103
lima_train_filtered <- peru_train %>%
filter(code %in% c(6103))
lima_train_cropped <- st_intersection(lima_train_filtered, st_union(lima_geoms_cropped))
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
View(lima_train_cropped)
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Plot best possible path
plot(st_geometry(paths_sf), add = green, col = "white", lwd = 2.0)
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Plot best possible path
plot(st_geometry(paths_sf), add = green, col = "green", lwd = 2.0)
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102)",
col = NA, border = "black", lwd = 1)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Plot best possible path
plot(st_geometry(paths_sf), add = TRUE, col = "green", lwd = 2.0)
# Plot Lima districts
plot(st_geometry(lima_geoms_cropped),
main = "Lima Districts + Rail (Code 6102)",
col = NA, border = "black", lwd = 1)
# Add weighted centroids (optional)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Plot best possible path
plot(st_geometry(paths_sf), add = TRUE, col = "green", lwd = 2.0)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Plot centroids (points)
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add text labels next to each centroid
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, pos = 3, col = "black")
View(lima_geoms_cropped)
# 1. Convert SpatRaster to RasterLayer for gdistance
cost_raster <- raster(raster_construction_difficulty)
conductance <- 1 / (cost_raster + 1e-6)
# 2. Create transition matrix and apply geo-correction
tr <- transition(conductance, transitionFunction = mean, directions = 8)
tr <- geoCorrection(tr, type = "c")
# 3. Extract coordinates of origin and destination centroids
origin <- st_coordinates(lima_centroids_weighted[lima_centroids_weighted$district_name == "SanJuandeLurigancho", ])
dest   <- st_coordinates(lima_centroids_weighted[lima_centroids_weighted$district_name == "VillaMariadelTriunfo", ])
# 4. Compute least-cost path between the two centroids
lcp <- shortestPath(tr, origin, dest, output = "SpatialLines")
# 5. Convert path to sf
lcp_sf <- st_as_sf(lcp)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path: SanJuanDeLurigancho → VillaMariaDelTriunfo",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "black", pos = 3)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "black", pos = 3)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 2)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Plot clean roads as lines
plot(st_geometry(lima_roads_primary), add = TRUE, col = "blue", lwd = 2.0)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Plot clean roads as lines
plot(st_geometry(lima_roads), add = TRUE, lwd = 2.0)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Plot clean roads as lines
plot(st_geometry(lima_roads), add = TRUE, lwd = 2.0)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Plot clean roads as lines
plot(st_geometry(lima_roads), add = TRUE, lwd = 2.0)
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Plot clean roads as lines
plot(lima_roads,add = TRUE)
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Plot clean roads as lines
plot(lima_roads,add = TRUE)
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "Black", lwd = 2)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Plot clean roads as lines
plot(lima_roads,add = TRUE)
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "black", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
# 6. Plot everything
par(mar = c(4, 4, 6, 2))  # Add space for title
plot(raster_construction_difficulty,
main = "Least-Cost Path Calculation",
col = viridis(100))
# Plot clean roads as lines
plot(lima_roads,add = TRUE)
# Add Lima district boundaries
plot(st_geometry(lima_geoms_cropped), add = TRUE, border = "black", lwd = 1)
# Add centroids
plot(st_geometry(lima_centroids_weighted), add = TRUE, col = "red", pch = 20, cex = 2)
# Add district names next to centroids
text(st_coordinates(lima_centroids_weighted),
labels = lima_centroids_weighted$district_name,
cex = 0.6, col = "white", pos = 3)
# Add filtered railway lines
plot(st_geometry(lima_train_cropped), add = TRUE, col = "purple", lwd = 4)
# Add least-cost path
plot(st_geometry(lcp_sf), add = TRUE, col = "white", lwd = 2)
